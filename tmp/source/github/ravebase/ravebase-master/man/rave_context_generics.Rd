% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aaa-context.R
\name{rave_context_generics}
\alias{rave_context_generics}
\title{Create S3 Generic Functions that Respects RAVE Context}
\usage{
rave_context_generics(fun_name, args = alist(), env = parent.frame())
}
\arguments{
\item{fun_name}{generic function name}

\item{args}{list of arguments to the function. Use \code{\link{alist}}}

\item{env}{in which environment the function is declared.}
}
\value{
A generic function.
}
\description{
Create S3 Generic Functions that Respects RAVE Context
}
\examples{


# Make a generic function that reacts under different contexts
# The goal is to ask user a comple question. Under debug mode,
# Ignore the question and always answer "Yes"
ask_for_input <- rave_context_generics(
  'ask_for_input', args = alist(msg =, ...=))

# write default action. Since under default context, shiny is not running
ask_for_input.default <- function(msg, ...){
  utils::askYesNo(msg)
}

ask_for_input.rave_module_debug <- function(msg, ...){
  # Do not prompt questions and always answer yes
  return(TRUE)
}

if(interactive()){
  rave_context('default')

  # will prompt for answer
  ask_for_input('Answer yes or no')
}

# When debugging modules
rave_context('rave_module_debug', package = 'base')
ask_for_input('Answer yes or no')  # always returns TRUE

}
\seealso{
\code{\link{rave-context}}
}
