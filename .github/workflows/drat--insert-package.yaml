
on:
  push:
    branches:
      - master
      - main

name: Compile Personal drat

jobs:
  drat:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (R-${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest,   r: 'release'}
        - {os: windows-latest, r: 'release'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      REPO: ${{ github.event.repository.name }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@v1
      
      - name: Drat -- clone dipterix/drat
        run: |
          rm -rf drat-tmp
          git clone https://github.com/dipterix/drat.git drat-tmp
          cp ./tmp/prepare.R drat-tmp/prepare.R
          cd drat-tmp
          git checkout gh-pages
          
      - name: Test
        run: |
          cd drat-tmp

      - name: Install dependencies
        run: |
          install.packages(c('remotes', 'BiocManager'))
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Install packages
        shell: Rscript {0}
        run: |
          remotes::install_cran(c("roxygen2", "devtools"), dependencies = TRUE, upgrade = 'never')
          BiocManager::install('rhdf5', update = FALSE, type = 'source')
          remotes::install_github(c(
            "dipterix/drat-1",
            "dipterix/dipsaus",
            "dipterix/threeBrain",
            "beauchamplab/raveio",
            "dipterix/rutabaga@develop", 
            "beauchamplab/rave",
            "dipterix/ravebase",
            "beauchamplab/ravebuiltins@migrate2"
          ), dependencies = TRUE, upgrade = 'never')

      - name: Compile
        shell: Rscript {0}
        run: |
          repo_dname = ""
          source("./drat-tmp/prepare.R")

      - name: Drat -- insert
        if: success()
        shell: Rscript {0}
        run: |
          repo_dname = ""
          fs <- list.files(file.path(".", repo_dname), all.files = FALSE, full.names = FALSE, recursive = FALSE, include.dirs = TRUE, no.. = FALSE)
          fs <- fs[!fs %in% c(".git", ".github", ".Rproj.user", "tmp", "drat-tmp", "drat.Rproj")]
          if( dipsaus::get_os() != 'windows' ){
            fs <- fs[!fs %in% c('src')]
          }
          root <- file.path("./drat-tmp", repo_dname)
          dir.create(root, recursive = TRUE, showWarnings = FALSE)
          for(f in fs){
            from <- file.path(".", repo_dname, f)
              if(dir.exists(f)){
                file.copy(from, root, overwrite = TRUE, recursive = TRUE)
              } else {
                file.copy(from, file.path(root, f), overwrite = TRUE)
              }
          }

      - name: Drat -- commit and push
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: success()
        run: |
          cd drat-tmp
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add -A *
          git add -f *.tar.gz
          git commit --allow-empty -m "Automated deploy from ${REPO}"
          git remote -v
          git push origin HEAD:gh-pages
